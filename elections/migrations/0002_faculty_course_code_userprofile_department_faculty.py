# Generated by Django 4.2.24 on 2025-09-13 13:38

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import elections.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('elections', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.SlugField(unique=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Faculties',
            },
        ),
        migrations.AddField(
            model_name='course',
            name='code',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(choices=[('ASPIRANT', 'Council Aspirant'), ('DELEGATE', 'Delegate'), ('IECK', 'IECK Member'), ('ADMIN', 'Admin')], max_length=20)),
                ('full_name', models.CharField(max_length=255)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10)),
                ('student_id', models.CharField(max_length=50, unique=True)),
                ('year_of_study', models.PositiveSmallIntegerField()),
                ('whatsapp_number', models.CharField(max_length=20)),
                ('council_position', models.CharField(blank=True, choices=[('CHAIR', 'Chair (President)'), ('VICE_CHAIR', 'Vice Chair'), ('SECRETARY_GENERAL', 'Secretary General'), ('FINANCE_SECRETARY', 'Finance Secretary'), ('ACADEMIC_SECRETARY', 'Academic Secretary'), ('SPORTS_SECRETARY', 'Sports Secretary'), ('SPECIAL_INTERESTS_SECRETARY', 'Special Interests Secretary')], max_length=50, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=20)),
                ('school_fees_screenshot', models.ImageField(help_text='Screenshot showing 80%+ school fees clearance', upload_to=elections.models.user_document_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])])),
                ('last_semester_results', models.FileField(help_text='Last semester results (PDF)', upload_to=elections.models.user_document_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('second_last_semester_results', models.FileField(help_text='Second last semester results (PDF)', upload_to=elections.models.user_document_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('course_registration_screenshot', models.ImageField(help_text='Current semester course registration screenshot', upload_to=elections.models.user_document_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])])),
                ('good_conduct_certificate', models.FileField(help_text='Certificate of Good Conduct (PDF)', upload_to=elections.models.user_document_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('school_id_image', models.ImageField(help_text='School ID image', upload_to=elections.models.user_document_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])])),
                ('last_semester_transcript', models.FileField(help_text='Last semester transcript (PDF)', upload_to=elections.models.user_document_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('second_last_semester_transcript', models.FileField(help_text='Second last semester transcript (PDF)', upload_to=elections.models.user_document_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('vetting_status', models.CharField(choices=[('NOT_STARTED', 'NOT_STARTED'), ('IN_PROGRESS', 'IN_PROGRESS'), ('PASSED', 'PASSED'), ('FAILED', 'FAILED')], default='NOT_STARTED', max_length=20)),
                ('is_qualified', models.BooleanField(default=False)),
                ('verification_notes', models.TextField(blank=True, null=True)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('whatsapp_notification_sent', models.BooleanField(default=False)),
                ('whatsapp_notification_sent_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='elections.course')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='users', to='elections.department')),
                ('faculty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='users', to='elections.faculty')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_profiles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='department',
            name='faculty',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='elections.faculty'),
        ),
    ]
